name:               th-unify
version:            1.0
cabal-version:      >= 1.10
build-type:         Simple
license:            BSD3
category:           Template Haskell
author:             David Fox
copyright:          (c) David Fox
maintainer:         David Fox <dsf@seereason.com>
homepage:           https://github.com/seereason/th-unify
bug-reports:        https://github.com/seereason/th=unify/issues
stability:          experimental
synopsis:           Unification for template haskell Types, with some applications
description:
  Unification of the type "Type" has various applications, in
  particular doing a better job of building instances such as SafeCopy
  and Serialize.  Unification is an operation which zips two types and
  determines where type variables are matched to some corresponding
  type, resulting in type variable bindings.  For example, a type is an
  instance of a class if it unifies with any of the class instances.
  See the package th-unify-clients for some examples of use.

library
  default-language: Haskell2010
  ghc-options: -Wall
  hs-source-dirs: src
  build-depends:
    base >= 4.8 && < 5,
    containers,
    extra,
    lens,
    ListLike,
    mtl,
    pretty,
    syb,
    template-haskell,
    th-desugar,
    th-lift,
    th-lift-instances,
    th-orphans
  exposed-modules:
    Data.THUnify.Prelude
    Data.THUnify.Prelude.Containers
    Data.THUnify.Prelude.Debug
    Data.THUnify.Prelude.Desugar
    Data.THUnify.Prelude.Monad
    Data.THUnify.Prelude.Ppr
    Data.THUnify.Prelude.TH
    Data.THUnify.Phantom
    Data.THUnify.Reify
    Data.THUnify.TypeRep
    Data.THUnify.Unify
